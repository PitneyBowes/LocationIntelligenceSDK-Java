/**
 * Location Intelligence APIs
 * Incorporate our extensive geodata into everyday applications, business processes and workflows.
 *
 * OpenAPI spec version: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package pb.locationintelligence.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import pb.locationintelligence.model.Address;
import pb.locationintelligence.model.Distance;
import pb.locationintelligence.model.Geometry;
import pb.locationintelligence.model.Match;
import pb.locationintelligence.model.Place;
import pb.locationintelligence.model.Poi;


/**
 * Location
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-28T14:56:37.023+05:30")
public class Location   {
  @SerializedName("dataset")
  private String dataset = null;

  @SerializedName("match")
  private Match match = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("poi")
  private Poi poi = null;

  @SerializedName("distance")
  private Distance distance = null;

  @SerializedName("unitTemp")
  private String unitTemp = null;

  @SerializedName("valueTemp")
  private String valueTemp = null;

  @SerializedName("geometry")
  private Geometry geometry = null;

  @SerializedName("place")
  private Place place = null;

  public Location dataset(String dataset) {
    this.dataset = dataset;
    return this;
  }

   /**
   * Get dataset
   * @return dataset
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDataset() {
    return dataset;
  }

  public void setDataset(String dataset) {
    this.dataset = dataset;
  }

  public Location match(Match match) {
    this.match = match;
    return this;
  }

   /**
   * Get match
   * @return match
  **/
  @ApiModelProperty(example = "null", value = "")
  public Match getMatch() {
    return match;
  }

  public void setMatch(Match match) {
    this.match = match;
  }

  public Location address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(example = "null", value = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Location poi(Poi poi) {
    this.poi = poi;
    return this;
  }

   /**
   * Get poi
   * @return poi
  **/
  @ApiModelProperty(example = "null", value = "")
  public Poi getPoi() {
    return poi;
  }

  public void setPoi(Poi poi) {
    this.poi = poi;
  }

  public Location distance(Distance distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @ApiModelProperty(example = "null", value = "")
  public Distance getDistance() {
    return distance;
  }

  public void setDistance(Distance distance) {
    this.distance = distance;
  }

  public Location unitTemp(String unitTemp) {
    this.unitTemp = unitTemp;
    return this;
  }

   /**
   * Get unitTemp
   * @return unitTemp
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUnitTemp() {
    return unitTemp;
  }

  public void setUnitTemp(String unitTemp) {
    this.unitTemp = unitTemp;
  }

  public Location valueTemp(String valueTemp) {
    this.valueTemp = valueTemp;
    return this;
  }

   /**
   * Get valueTemp
   * @return valueTemp
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getValueTemp() {
    return valueTemp;
  }

  public void setValueTemp(String valueTemp) {
    this.valueTemp = valueTemp;
  }

  public Location geometry(Geometry geometry) {
    this.geometry = geometry;
    return this;
  }

   /**
   * Get geometry
   * @return geometry
  **/
  @ApiModelProperty(example = "null", value = "")
  public Geometry getGeometry() {
    return geometry;
  }

  public void setGeometry(Geometry geometry) {
    this.geometry = geometry;
  }

  public Location place(Place place) {
    this.place = place;
    return this;
  }

   /**
   * Get place
   * @return place
  **/
  @ApiModelProperty(example = "null", value = "")
  public Place getPlace() {
    return place;
  }

  public void setPlace(Place place) {
    this.place = place;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return Objects.equals(this.dataset, location.dataset) &&
        Objects.equals(this.match, location.match) &&
        Objects.equals(this.address, location.address) &&
        Objects.equals(this.poi, location.poi) &&
        Objects.equals(this.distance, location.distance) &&
        Objects.equals(this.unitTemp, location.unitTemp) &&
        Objects.equals(this.valueTemp, location.valueTemp) &&
        Objects.equals(this.geometry, location.geometry) &&
        Objects.equals(this.place, location.place);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataset, match, address, poi, distance, unitTemp, valueTemp, geometry, place);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    
    sb.append("    dataset: ").append(toIndentedString(dataset)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    poi: ").append(toIndentedString(poi)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    unitTemp: ").append(toIndentedString(unitTemp)).append("\n");
    sb.append("    valueTemp: ").append(toIndentedString(valueTemp)).append("\n");
    sb.append("    geometry: ").append(toIndentedString(geometry)).append("\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

