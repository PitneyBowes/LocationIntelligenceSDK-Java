/**
 * Location Intelligence APIs
 * Incorporate our extensive geodata into everyday applications, business processes and workflows.
 *
 * OpenAPI spec version: 8.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package pb.locationintelligence.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import pb.locationintelligence.model.CommonGeometry;
import pb.locationintelligence.model.Road;
import pb.locationintelligence.model.Unit;


/**
 * Intersection
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-16T15:55:12.092+05:30")
public class Intersection   {
  @SerializedName("distance")
  private Unit distance = null;

  @SerializedName("driveTime")
  private Unit driveTime = null;

  @SerializedName("driveDistance")
  private Unit driveDistance = null;

  @SerializedName("geometry")
  private CommonGeometry geometry = null;

  @SerializedName("roads")
  private List<Road> roads = new ArrayList<Road>();

  public Intersection distance(Unit distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @ApiModelProperty(example = "null", value = "")
  public Unit getDistance() {
    return distance;
  }

  public void setDistance(Unit distance) {
    this.distance = distance;
  }

  public Intersection driveTime(Unit driveTime) {
    this.driveTime = driveTime;
    return this;
  }

   /**
   * Get driveTime
   * @return driveTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public Unit getDriveTime() {
    return driveTime;
  }

  public void setDriveTime(Unit driveTime) {
    this.driveTime = driveTime;
  }

  public Intersection driveDistance(Unit driveDistance) {
    this.driveDistance = driveDistance;
    return this;
  }

   /**
   * Get driveDistance
   * @return driveDistance
  **/
  @ApiModelProperty(example = "null", value = "")
  public Unit getDriveDistance() {
    return driveDistance;
  }

  public void setDriveDistance(Unit driveDistance) {
    this.driveDistance = driveDistance;
  }

  public Intersection geometry(CommonGeometry geometry) {
    this.geometry = geometry;
    return this;
  }

   /**
   * Get geometry
   * @return geometry
  **/
  @ApiModelProperty(example = "null", value = "")
  public CommonGeometry getGeometry() {
    return geometry;
  }

  public void setGeometry(CommonGeometry geometry) {
    this.geometry = geometry;
  }

  public Intersection roads(List<Road> roads) {
    this.roads = roads;
    return this;
  }

   /**
   * Get roads
   * @return roads
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Road> getRoads() {
    return roads;
  }

  public void setRoads(List<Road> roads) {
    this.roads = roads;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Intersection intersection = (Intersection) o;
    return Objects.equals(this.distance, intersection.distance) &&
        Objects.equals(this.driveTime, intersection.driveTime) &&
        Objects.equals(this.driveDistance, intersection.driveDistance) &&
        Objects.equals(this.geometry, intersection.geometry) &&
        Objects.equals(this.roads, intersection.roads);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distance, driveTime, driveDistance, geometry, roads);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Intersection {\n");
    
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    driveTime: ").append(toIndentedString(driveTime)).append("\n");
    sb.append("    driveDistance: ").append(toIndentedString(driveDistance)).append("\n");
    sb.append("    geometry: ").append(toIndentedString(geometry)).append("\n");
    sb.append("    roads: ").append(toIndentedString(roads)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

