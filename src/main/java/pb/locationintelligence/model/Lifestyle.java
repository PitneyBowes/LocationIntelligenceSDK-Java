/**
 * Location Intelligence APIs
 * Incorporate our extensive geodata into everyday applications, business processes and workflows.
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package pb.locationintelligence.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import pb.locationintelligence.model.Boundary;


/**
 * Lifestyle
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-15T12:57:00.076+05:30")
public class Lifestyle   {
  @SerializedName("internationalType")
  private String internationalType = null;

  @SerializedName("groupType")
  private String groupType = null;

  @SerializedName("categoryType")
  private String categoryType = null;

  @SerializedName("boundary")
  private Boundary boundary = null;

  public Lifestyle internationalType(String internationalType) {
    this.internationalType = internationalType;
    return this;
  }

   /**
   * Get internationalType
   * @return internationalType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getInternationalType() {
    return internationalType;
  }

  public void setInternationalType(String internationalType) {
    this.internationalType = internationalType;
  }

  public Lifestyle groupType(String groupType) {
    this.groupType = groupType;
    return this;
  }

   /**
   * Get groupType
   * @return groupType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getGroupType() {
    return groupType;
  }

  public void setGroupType(String groupType) {
    this.groupType = groupType;
  }

  public Lifestyle categoryType(String categoryType) {
    this.categoryType = categoryType;
    return this;
  }

   /**
   * Get categoryType
   * @return categoryType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCategoryType() {
    return categoryType;
  }

  public void setCategoryType(String categoryType) {
    this.categoryType = categoryType;
  }

  public Lifestyle boundary(Boundary boundary) {
    this.boundary = boundary;
    return this;
  }

   /**
   * Get boundary
   * @return boundary
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boundary getBoundary() {
    return boundary;
  }

  public void setBoundary(Boundary boundary) {
    this.boundary = boundary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Lifestyle lifestyle = (Lifestyle) o;
    return Objects.equals(this.internationalType, lifestyle.internationalType) &&
        Objects.equals(this.groupType, lifestyle.groupType) &&
        Objects.equals(this.categoryType, lifestyle.categoryType) &&
        Objects.equals(this.boundary, lifestyle.boundary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internationalType, groupType, categoryType, boundary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Lifestyle {\n");
    
    sb.append("    internationalType: ").append(toIndentedString(internationalType)).append("\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    categoryType: ").append(toIndentedString(categoryType)).append("\n");
    sb.append("    boundary: ").append(toIndentedString(boundary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

