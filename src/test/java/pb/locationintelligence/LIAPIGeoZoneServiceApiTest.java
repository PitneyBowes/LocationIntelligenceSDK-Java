/**
 * Location Intelligence APIs
 * Incorporate our extensive geodata into everyday applications, business processes and workflows.
 *
 * OpenAPI spec version: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package pb.locationintelligence;

import pb.ApiException;
import pb.locationintelligence.model.TravelBoundaries;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LIAPIGeoZoneServiceApi
 */
public class LIAPIGeoZoneServiceApiTest {

    private final LIAPIGeoZoneServiceApi api = new LIAPIGeoZoneServiceApi();

    
    /**
     * Gets travel Boundary by Distance
     *
     * Returns the travel boundary based on travel distance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTravelBoundaryByDistanceTest() throws ApiException {
        String costs = null;
        String point = null;
        String address = null;
        String costUnit = null;
        String db = null;
        String country = null;
        String maxOffroadDistance = null;
        String maxOffroadDistanceUnit = null;
        String destinationSrs = null;
        String majorRoads = null;
        String returnHoles = null;
        String returnIslands = null;
        String simplificationFactor = null;
        String bandingStyle = null;
        String historicTrafficTimeBucket = null;
        // TravelBoundaries response = api.getTravelBoundaryByDistance(costs, point, address, costUnit, db, country, maxOffroadDistance, maxOffroadDistanceUnit, destinationSrs, majorRoads, returnHoles, returnIslands, simplificationFactor, bandingStyle, historicTrafficTimeBucket);

        // TODO: test validations
    }
    
    /**
     * Gets travel Boundary by Time
     *
     * Travel boundary based on travel time.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTravelBoundaryByTimeTest() throws ApiException {
        String costs = null;
        String point = null;
        String address = null;
        String costUnit = null;
        String db = null;
        String country = null;
        String maxOffroadDistance = null;
        String maxOffroadDistanceUnit = null;
        String destinationSrs = null;
        String majorRoads = null;
        String returnHoles = null;
        String returnIslands = null;
        String simplificationFactor = null;
        String bandingStyle = null;
        String historicTrafficTimeBucket = null;
        // TravelBoundaries response = api.getTravelBoundaryByTime(costs, point, address, costUnit, db, country, maxOffroadDistance, maxOffroadDistanceUnit, destinationSrs, majorRoads, returnHoles, returnIslands, simplificationFactor, bandingStyle, historicTrafficTimeBucket);

        // TODO: test validations
    }
    
}
